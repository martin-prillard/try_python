{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Todo List API","text":"<p>API moderne de gestion de t\u00e2ches avec FastAPI et Streamlit, respectant les bonnes pratiques de d\u00e9veloppement Python.</p>"},{"location":"#demarrage-rapide","title":"\ud83d\ude80 D\u00e9marrage rapide","text":""},{"location":"#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Python 3.11+</li> <li>Git</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code># Cloner le repository\ngit clone https://github.com/your-username/todo-list-best-practices.git\ncd todo-list-best-practices\n\n# Installer avec Hatch (recommand\u00e9)\nhatch env create\nhatch run pip install -e \".[dev]\"\n\n# Ou avec pip\npython -m venv .venv\nsource .venv/bin/activate  # Linux/macOS\n# ou .venv\\Scripts\\activate  # Windows\npip install -e \".[dev]\"\n</code></pre>"},{"location":"#commandes-essentielles","title":"\ud83c\udfc3\u200d\u2642\ufe0f Commandes essentielles","text":""},{"location":"#lancer-lapplication","title":"Lancer l'application","text":"<pre><code># API FastAPI\nhatch run start-api\n# ou\nuvicorn todo_app.api:app --host 0.0.0.0 --port 8000 --reload\n\n# Interface web Streamlit\nhatch run start-web\n# ou\nstreamlit run todo_app/webapp.py --server.port 8501\n</code></pre>"},{"location":"#tests","title":"Tests","text":"<pre><code># Tous les tests\nhatch run pytest\n\n# Tests avec couverture\nhatch run pytest --cov=todo_app --cov-report=html --cov-fail-under=85\n\n# Tests sp\u00e9cifiques\nhatch run pytest tests/test_api.py -v\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<pre><code># Servir la documentation\nhatch run mkdocs serve\n\n# Construire la documentation\nhatch run mkdocs build\n</code></pre>"},{"location":"#endpoints-api","title":"\ud83d\udcca Endpoints API","text":"<ul> <li>Documentation interactive : http://localhost:8000/docs</li> <li>Documentation ReDoc : http://localhost:8000/redoc</li> <li>Health check : http://localhost:8000/health</li> </ul>"},{"location":"#exemples-dutilisation","title":"Exemples d'utilisation","text":"<pre><code># Lister les t\u00e2ches\ncurl http://localhost:8000/todos\n\n# Cr\u00e9er une t\u00e2che\ncurl -X POST http://localhost:8000/todos \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"title\": \"Ma t\u00e2che\", \"description\": \"Description\"}'\n\n# Mettre \u00e0 jour une t\u00e2che\ncurl -X PATCH http://localhost:8000/todos/1 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"completed\": true}'\n\n# Supprimer une t\u00e2che\ncurl -X DELETE http://localhost:8000/todos/1\n</code></pre>"},{"location":"#fonctionnalites","title":"\ud83d\udee0\ufe0f Fonctionnalit\u00e9s","text":"<ul> <li>\u2705 API REST avec FastAPI</li> <li>\u2705 Interface web avec Streamlit</li> <li>\u2705 Validation des donn\u00e9es avec Pydantic</li> <li>\u2705 Tests complets avec pytest</li> <li>\u2705 Documentation automatique</li> <li>\u2705 Docker support</li> <li>\u2705 CI/CD avec GitHub Actions</li> <li>\u2705 Qualit\u00e9 du code avec Ruff, Black, mypy</li> </ul>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>Toutes les modifications notables de ce projet seront document\u00e9es dans ce fichier.</p> <p>Le format est bas\u00e9 sur Keep a Changelog, et ce projet adh\u00e8re au Semantic Versioning.</p>"},{"location":"CHANGELOG/#unreleased","title":"[Unreleased]","text":""},{"location":"CHANGELOG/#added","title":"Added","text":"<ul> <li>Configuration MkDocs pour la g\u00e9n\u00e9ration de documentation</li> <li>Documentation compl\u00e8te avec guides d'installation, utilisation, API, architecture, tests et d\u00e9ploiement</li> <li>Support pour la g\u00e9n\u00e9ration de documentation avec <code>hatch run mkdocs serve</code> et <code>hatch run mkdocs build</code></li> </ul>"},{"location":"CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Simplification des tests pour se concentrer uniquement sur le code m\u00e9tier</li> <li>Suppression des tests d'infrastructure (logger, config, webapp)</li> <li>Am\u00e9lioration de la couverture de code \u00e0 97% pour le code m\u00e9tier</li> </ul>"},{"location":"CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Correction de l'utilisation de <code>datetime.utcnow()</code> d\u00e9pr\u00e9ci\u00e9 vers <code>datetime.now(timezone.utc)</code></li> <li>Correction de l'utilisation de m\u00e9thodes Pydantic d\u00e9pr\u00e9ci\u00e9es (<code>dict()</code> \u2192 <code>model_dump()</code>, <code>copy()</code> \u2192 <code>model_copy()</code>)</li> <li>Ajout de l'injection de d\u00e9pendances dans l'API pour l'isolation des tests</li> </ul>"},{"location":"CHANGELOG/#010-2025-01-15","title":"[0.1.0] - 2025-01-15","text":""},{"location":"CHANGELOG/#added_1","title":"Added","text":"<ul> <li>API REST avec FastAPI pour la gestion des t\u00e2ches</li> <li>Interface web avec Streamlit</li> <li>Mod\u00e8les Pydantic pour la validation des donn\u00e9es</li> <li>Repository en m\u00e9moire pour la persistance des donn\u00e9es</li> <li>Service layer pour la logique m\u00e9tier</li> <li>Tests unitaires et d'int\u00e9gration avec pytest</li> <li>Configuration avec variables d'environnement</li> <li>Support Docker avec docker-compose</li> <li>CI/CD avec GitHub Actions</li> <li>Outils de qualit\u00e9 de code (Ruff, Black, mypy)</li> <li>Documentation automatique avec FastAPI</li> <li>Health checks pour le monitoring</li> </ul>"},{"location":"CHANGELOG/#features","title":"Features","text":"<ul> <li>CRUD complet pour les t\u00e2ches (Create, Read, Update, Delete)</li> <li>Validation des donn\u00e9es avec Pydantic</li> <li>Interface utilisateur intuitive avec Streamlit</li> <li>API document\u00e9e automatiquement avec Swagger UI</li> <li>Tests avec couverture de code &gt;= 85%</li> <li>Support pour les environnements de d\u00e9veloppement et production</li> <li>Configuration flexible via variables d'environnement</li> </ul>"},{"location":"CODE_OF_CONDUCT/","title":"Code de Conduite","text":""},{"location":"CODE_OF_CONDUCT/#notre-engagement","title":"Notre Engagement","text":"<p>Dans l'int\u00e9r\u00eat de favoriser un environnement ouvert et accueillant, nous nous engageons \u00e0 faire de la participation \u00e0 notre projet et \u00e0 notre communaut\u00e9 une exp\u00e9rience sans harc\u00e8lement pour tous, peu importe l'\u00e2ge, la taille, le handicap, l'ethnicit\u00e9, les caract\u00e9ristiques sexuelles, l'identit\u00e9 et l'expression de genre, le niveau d'exp\u00e9rience, l'\u00e9ducation, le statut socio-\u00e9conomique, la nationalit\u00e9, l'apparence personnelle, la race, la religion ou l'orientation sexuelle et l'identit\u00e9.</p>"},{"location":"CODE_OF_CONDUCT/#nos-standards","title":"Nos Standards","text":"<p>Exemples de comportements qui contribuent \u00e0 cr\u00e9er un environnement positif :</p> <ul> <li>Utiliser un langage accueillant et inclusif</li> <li>Respecter les diff\u00e9rents points de vue et exp\u00e9riences</li> <li>Accepter gracieusement les critiques constructives</li> <li>Se concentrer sur ce qui est le mieux pour la communaut\u00e9</li> <li>Faire preuve d'empathie envers les autres membres de la communaut\u00e9</li> </ul> <p>Exemples de comportements inacceptables :</p> <ul> <li>L'utilisation de langage ou d'images sexualis\u00e9s ou d'attention ou d'avances sexuelles non d\u00e9sir\u00e9es</li> <li>Le trolling, les commentaires insultants ou d\u00e9sobligeants, et les attaques personnelles ou politiques</li> <li>Le harc\u00e8lement public ou priv\u00e9</li> <li>La publication d'informations priv\u00e9es d'autrui sans permission explicite</li> <li>Toute conduite qui pourrait raisonnablement \u00eatre consid\u00e9r\u00e9e comme inappropri\u00e9e dans un environnement professionnel</li> </ul>"},{"location":"CODE_OF_CONDUCT/#nos-responsabilites","title":"Nos Responsabilit\u00e9s","text":"<p>Les responsables du projet sont responsables de clarifier les normes de comportement acceptables et sont cens\u00e9s prendre des mesures correctives appropri\u00e9es et \u00e9quitables en r\u00e9ponse \u00e0 tout comportement inacceptable.</p>"},{"location":"CODE_OF_CONDUCT/#portee","title":"Port\u00e9e","text":"<p>Ce Code de Conduite s'applique dans les espaces publics du projet ainsi que dans les espaces priv\u00e9s lorsqu'une personne repr\u00e9sente le projet ou sa communaut\u00e9.</p>"},{"location":"CODE_OF_CONDUCT/#application","title":"Application","text":"<p>Les cas de comportement abusif, harcelant ou autrement inacceptable peuvent \u00eatre signal\u00e9s en contactant l'\u00e9quipe du projet. Toutes les plaintes seront examin\u00e9es et feront l'objet d'une enqu\u00eate qui aboutira \u00e0 une r\u00e9ponse jug\u00e9e n\u00e9cessaire et appropri\u00e9e aux circonstances.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>Ce Code de Conduite est adapt\u00e9 du Contributor Covenant, version 1.4, disponible \u00e0 https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#endpoints","title":"Endpoints","text":""},{"location":"api/#get-todos","title":"GET /todos","text":"<p>Liste toutes les t\u00e2ches.</p> <p>R\u00e9ponse : <pre><code>[\n  {\n    \"id\": 1,\n    \"title\": \"Ma t\u00e2che\",\n    \"description\": \"Description de la t\u00e2che\",\n    \"completed\": false,\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n  }\n]\n</code></pre></p>"},{"location":"api/#post-todos","title":"POST /todos","text":"<p>Cr\u00e9e une nouvelle t\u00e2che.</p> <p>Corps de la requ\u00eate : <pre><code>{\n  \"title\": \"string\",\n  \"description\": \"string\"  // optionnel\n}\n</code></pre></p> <p>R\u00e9ponse : <pre><code>{\n  \"id\": 1,\n  \"title\": \"Ma t\u00e2che\",\n  \"description\": \"Description de la t\u00e2che\",\n  \"completed\": false,\n  \"created_at\": \"2023-01-01T12:00:00Z\"\n}\n</code></pre></p>"},{"location":"api/#patch-todosid","title":"PATCH /todos/{id}","text":"<p>Met \u00e0 jour une t\u00e2che existante.</p> <p>Param\u00e8tres : - <code>id</code> (int) : ID de la t\u00e2che \u00e0 mettre \u00e0 jour</p> <p>Corps de la requ\u00eate : <pre><code>{\n  \"title\": \"string\",        // optionnel\n  \"description\": \"string\",  // optionnel\n  \"completed\": true         // optionnel\n}\n</code></pre></p> <p>R\u00e9ponse : <pre><code>{\n  \"id\": 1,\n  \"title\": \"T\u00e2che mise \u00e0 jour\",\n  \"description\": \"Nouvelle description\",\n  \"completed\": true,\n  \"created_at\": \"2023-01-01T12:00:00Z\"\n}\n</code></pre></p>"},{"location":"api/#delete-todosid","title":"DELETE /todos/{id}","text":"<p>Supprime une t\u00e2che.</p> <p>Param\u00e8tres : - <code>id</code> (int) : ID de la t\u00e2che \u00e0 supprimer</p> <p>R\u00e9ponse : - Code de statut : <code>204 No Content</code></p>"},{"location":"api/#get-health","title":"GET /health","text":"<p>Health check de l'API.</p> <p>R\u00e9ponse : <pre><code>{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2023-01-01T12:00:00Z\",\n  \"version\": \"0.1.0\",\n  \"service\": \"todo-list-api\"\n}\n</code></pre></p>"},{"location":"api/#get-healthready","title":"GET /health/ready","text":"<p>Readiness check de l'API.</p> <p>R\u00e9ponse : <pre><code>{\n  \"status\": \"ready\",\n  \"timestamp\": \"2023-01-01T12:00:00Z\"\n}\n</code></pre></p>"},{"location":"api/#codes-de-statut","title":"Codes de statut","text":"Code Description 200 OK 201 Created 204 No Content 404 Not Found 422 Unprocessable Entity"},{"location":"api/#validation-des-donnees","title":"Validation des donn\u00e9es","text":""},{"location":"api/#contraintes","title":"Contraintes","text":"<ul> <li>title : 1-200 caract\u00e8res</li> <li>description : 0-2000 caract\u00e8res (optionnel)</li> </ul>"},{"location":"api/#exemples-derreurs-de-validation","title":"Exemples d'erreurs de validation","text":"<pre><code>{\n  \"detail\": [\n    {\n      \"type\": \"string_too_short\",\n      \"loc\": [\"body\", \"title\"],\n      \"msg\": \"String should have at least 1 character\",\n      \"input\": \"\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#documentation-interactive","title":"Documentation interactive","text":"<ul> <li>Swagger UI : http://localhost:8000/docs</li> <li>ReDoc : http://localhost:8000/redoc</li> </ul>"},{"location":"architecture/","title":"Architecture","text":""},{"location":"architecture/#vue-densemble","title":"Vue d'ensemble","text":"<p>L'application Todo List suit une architecture en couches (layered architecture) avec une s\u00e9paration claire des responsabilit\u00e9s.</p>"},{"location":"architecture/#structure-du-projet","title":"Structure du projet","text":"<pre><code>todo_app/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 api.py          # Couche API (FastAPI)\n\u251c\u2500\u2500 config.py       # Configuration\n\u251c\u2500\u2500 logger.py       # Logging\n\u251c\u2500\u2500 models.py       # Mod\u00e8les de donn\u00e9es (Pydantic)\n\u251c\u2500\u2500 repository.py   # Couche d'acc\u00e8s aux donn\u00e9es\n\u251c\u2500\u2500 service.py      # Couche logique m\u00e9tier\n\u2514\u2500\u2500 webapp.py       # Interface utilisateur (Streamlit)\n</code></pre>"},{"location":"architecture/#couches-de-larchitecture","title":"Couches de l'architecture","text":""},{"location":"architecture/#1-couche-api-apipy","title":"1. Couche API (api.py)","text":"<ul> <li>Responsabilit\u00e9 : Gestion des requ\u00eates HTTP</li> <li>Technologie : FastAPI</li> <li>Fonctions :</li> <li>Validation des entr\u00e9es</li> <li>Gestion des erreurs HTTP</li> <li>S\u00e9rialisation des r\u00e9ponses</li> </ul>"},{"location":"architecture/#2-couche-service-servicepy","title":"2. Couche Service (service.py)","text":"<ul> <li>Responsabilit\u00e9 : Logique m\u00e9tier</li> <li>Fonctions :</li> <li>Orchestration des op\u00e9rations</li> <li>Validation m\u00e9tier</li> <li>Gestion des transactions</li> </ul>"},{"location":"architecture/#3-couche-repository-repositorypy","title":"3. Couche Repository (repository.py)","text":"<ul> <li>Responsabilit\u00e9 : Acc\u00e8s aux donn\u00e9es</li> <li>Fonctions :</li> <li>CRUD operations</li> <li>Abstraction de la source de donn\u00e9es</li> <li>Gestion de la persistance</li> </ul>"},{"location":"architecture/#4-couche-modeles-modelspy","title":"4. Couche Mod\u00e8les (models.py)","text":"<ul> <li>Responsabilit\u00e9 : D\u00e9finition des structures de donn\u00e9es</li> <li>Technologie : Pydantic</li> <li>Fonctions :</li> <li>Validation des donn\u00e9es</li> <li>S\u00e9rialisation/d\u00e9s\u00e9rialisation</li> <li>Documentation automatique</li> </ul>"},{"location":"architecture/#flux-de-donnees","title":"Flux de donn\u00e9es","text":"<pre><code>graph TD\n    A[Client HTTP] --&gt; B[API Layer]\n    B --&gt; C[Service Layer]\n    C --&gt; D[Repository Layer]\n    D --&gt; E[Data Storage]\n\n    F[Streamlit UI] --&gt; G[Service Layer]\n    G --&gt; D</code></pre>"},{"location":"architecture/#principes-architecturaux","title":"Principes architecturaux","text":""},{"location":"architecture/#1-separation-des-responsabilites","title":"1. S\u00e9paration des responsabilit\u00e9s","text":"<p>Chaque couche a une responsabilit\u00e9 unique et bien d\u00e9finie.</p>"},{"location":"architecture/#2-inversion-de-dependance","title":"2. Inversion de d\u00e9pendance","text":"<p>Les couches sup\u00e9rieures d\u00e9pendent d'abstractions, pas d'impl\u00e9mentations concr\u00e8tes.</p>"},{"location":"architecture/#3-testabilite","title":"3. Testabilit\u00e9","text":"<p>L'architecture facilite les tests unitaires et d'int\u00e9gration.</p>"},{"location":"architecture/#4-evolutivite","title":"4. \u00c9volutivit\u00e9","text":"<p>La structure permet d'ajouter facilement de nouvelles fonctionnalit\u00e9s.</p>"},{"location":"architecture/#technologies-utilisees","title":"Technologies utilis\u00e9es","text":""},{"location":"architecture/#backend","title":"Backend","text":"<ul> <li>FastAPI : Framework web moderne et performant</li> <li>Pydantic : Validation et s\u00e9rialisation des donn\u00e9es</li> <li>Uvicorn : Serveur ASGI</li> </ul>"},{"location":"architecture/#frontend","title":"Frontend","text":"<ul> <li>Streamlit : Interface utilisateur simple et interactive</li> </ul>"},{"location":"architecture/#outils-de-developpement","title":"Outils de d\u00e9veloppement","text":"<ul> <li>pytest : Framework de tests</li> <li>Ruff : Linter et formateur</li> <li>Black : Formateur de code</li> <li>mypy : V\u00e9rificateur de types</li> <li>MkDocs : Documentation</li> </ul>"},{"location":"architecture/#configuration","title":"Configuration","text":""},{"location":"architecture/#variables-denvironnement","title":"Variables d'environnement","text":"<pre><code>APP_NAME=Todo List API\nDEBUG=false\nHOST=0.0.0.0\nPORT=8000\nLOG_LEVEL=INFO\n</code></pre>"},{"location":"architecture/#gestion-des-dependances","title":"Gestion des d\u00e9pendances","text":"<p>Le projet utilise Hatch pour la gestion des d\u00e9pendances et des environnements virtuels.</p>"},{"location":"architecture/#deploiement","title":"D\u00e9ploiement","text":""},{"location":"architecture/#developpement-local","title":"D\u00e9veloppement local","text":"<pre><code># API\nhatch run start-api\n\n# Interface web\nhatch run start-web\n</code></pre>"},{"location":"architecture/#docker","title":"Docker","text":"<pre><code># D\u00e9veloppement\ndocker-compose up\n\n# Production\ndocker build -t todo-api .\ndocker run -p 8000:8000 todo-api\n</code></pre>"},{"location":"architecture/#monitoring","title":"Monitoring","text":""},{"location":"architecture/#health-checks","title":"Health checks","text":"<ul> <li><code>/health</code> : V\u00e9rification de l'\u00e9tat de l'API</li> <li><code>/health/ready</code> : V\u00e9rification de la disponibilit\u00e9</li> </ul>"},{"location":"architecture/#logs","title":"Logs","text":"<p>Les logs sont structur\u00e9s et incluent : - Niveau de log - Timestamp - Message - Contexte</p>"},{"location":"contributing/","title":"Contribution","text":""},{"location":"contributing/#comment-contribuer","title":"Comment contribuer","text":"<p>Nous accueillons les contributions ! Voici comment vous pouvez aider :</p> <ol> <li>Fork le projet</li> <li>Cr\u00e9er une branche feature</li> <li>D\u00e9velopper votre fonctionnalit\u00e9</li> <li>Tester votre code</li> <li>Cr\u00e9er une Pull Request</li> </ol>"},{"location":"contributing/#workflow-de-developpement","title":"Workflow de d\u00e9veloppement","text":""},{"location":"contributing/#1-fork-et-clone","title":"1. Fork et clone","text":"<pre><code># Fork le projet sur GitHub, puis :\ngit clone https://github.com/votre-username/todo-list-best-practices.git\ncd todo-list-best-practices\n\n# Ajouter le remote upstream\ngit remote add upstream https://github.com/original-username/todo-list-best-practices.git\n</code></pre>"},{"location":"contributing/#2-creer-une-branche","title":"2. Cr\u00e9er une branche","text":"<pre><code># Cr\u00e9er et basculer sur une nouvelle branche\ngit checkout -b feature/nouvelle-fonctionnalite\n\n# Ou pour une correction de bug\ngit checkout -b fix/correction-bug\n</code></pre>"},{"location":"contributing/#3-developper","title":"3. D\u00e9velopper","text":"<pre><code># Installer les d\u00e9pendances\nhatch env create\nhatch run pip install -e \".[dev]\"\n\n# D\u00e9velopper votre fonctionnalit\u00e9\n# ... votre code ...\n\n# V\u00e9rifier la qualit\u00e9 du code\nhatch run pre-commit run --all-files\n</code></pre>"},{"location":"contributing/#4-tester","title":"4. Tester","text":"<pre><code># Ex\u00e9cuter tous les tests\nhatch run pytest\n\n# Tests avec couverture\nhatch run pytest --cov=todo_app --cov-report=html\n\n# V\u00e9rifier les types\nhatch run mypy todo_app/\n</code></pre>"},{"location":"contributing/#5-commit-et-push","title":"5. Commit et push","text":"<pre><code># Ajouter les fichiers modifi\u00e9s\ngit add .\n\n# Commit avec un message descriptif\ngit commit -m \"feat: ajouter nouvelle fonctionnalit\u00e9\"\n\n# Push vers votre fork\ngit push origin feature/nouvelle-fonctionnalite\n</code></pre>"},{"location":"contributing/#6-pull-request","title":"6. Pull Request","text":"<ol> <li>Aller sur GitHub</li> <li>Cliquer sur \"New Pull Request\"</li> <li>Remplir le template de PR</li> <li>Attendre la review</li> </ol>"},{"location":"contributing/#standards-de-code","title":"Standards de code","text":""},{"location":"contributing/#python","title":"Python","text":"<ul> <li>PEP 8 : Style de code Python</li> <li>Black : Formatage automatique</li> <li>Ruff : Linting et corrections</li> <li>mypy : V\u00e9rification des types</li> </ul>"},{"location":"contributing/#commits","title":"Commits","text":"<p>Utilisez le format Conventional Commits :</p> <pre><code>type(scope): description\n\nfeat(api): ajouter endpoint pour supprimer les t\u00e2ches\nfix(service): corriger bug dans la validation\ndocs(readme): mettre \u00e0 jour les instructions d'installation\ntest(api): ajouter tests pour le nouvel endpoint\n</code></pre> <p>Types disponibles : - <code>feat</code> : Nouvelle fonctionnalit\u00e9 - <code>fix</code> : Correction de bug - <code>docs</code> : Documentation - <code>style</code> : Formatage, point-virgules manquants, etc. - <code>refactor</code> : Refactoring du code - <code>test</code> : Ajout ou modification de tests - <code>chore</code> : T\u00e2ches de maintenance</p>"},{"location":"contributing/#tests","title":"Tests","text":"<ul> <li>Couverture minimum : 85%</li> <li>Tests unitaires : Pour chaque fonction</li> <li>Tests d'int\u00e9gration : Pour les workflows complets</li> <li>Nommage : <code>test_&lt;fonctionnalit\u00e9&gt;_&lt;scenario&gt;</code></li> </ul>"},{"location":"contributing/#documentation","title":"Documentation","text":"<ul> <li>Docstrings : Pour toutes les fonctions publiques</li> <li>Type hints : Pour tous les param\u00e8tres et retours</li> <li>README : Mise \u00e0 jour si n\u00e9cessaire</li> <li>MkDocs : Documentation technique</li> </ul>"},{"location":"contributing/#configuration-de-lenvironnement","title":"Configuration de l'environnement","text":""},{"location":"contributing/#pre-commit-hooks","title":"Pre-commit hooks","text":"<pre><code># Installer les hooks\nhatch run pre-commit install\n\n# Lancer manuellement\nhatch run pre-commit run --all-files\n\n# Mettre \u00e0 jour les hooks\nhatch run pre-commit autoupdate\n</code></pre>"},{"location":"contributing/#ide-configuration","title":"IDE Configuration","text":""},{"location":"contributing/#vs-code","title":"VS Code","text":"<pre><code>// .vscode/settings.json\n{\n    \"python.defaultInterpreterPath\": \".venv/bin/python\",\n    \"python.linting.enabled\": true,\n    \"python.linting.ruffEnabled\": true,\n    \"python.formatting.provider\": \"black\",\n    \"python.sortImports.args\": [\"--profile\", \"black\"],\n    \"editor.formatOnSave\": true,\n    \"editor.codeActionsOnSave\": {\n        \"source.organizeImports\": true\n    }\n}\n</code></pre>"},{"location":"contributing/#pycharm","title":"PyCharm","text":"<ol> <li>Configurer l'interpr\u00e9teur Python vers <code>.venv/bin/python</code></li> <li>Activer Ruff comme linter</li> <li>Configurer Black comme formateur</li> <li>Activer mypy pour la v\u00e9rification des types</li> </ol>"},{"location":"contributing/#types-de-contributions","title":"Types de contributions","text":""},{"location":"contributing/#corrections-de-bugs","title":"\ud83d\udc1b Corrections de bugs","text":"<ol> <li>Identifier le bug</li> <li>Cr\u00e9er une issue si elle n'existe pas</li> <li>Cr\u00e9er une branche <code>fix/description-du-bug</code></li> <li>Impl\u00e9menter la correction</li> <li>Ajouter des tests</li> <li>Cr\u00e9er une PR</li> </ol>"},{"location":"contributing/#nouvelles-fonctionnalites","title":"\u2728 Nouvelles fonctionnalit\u00e9s","text":"<ol> <li>Cr\u00e9er une issue pour discuter la fonctionnalit\u00e9</li> <li>Attendre l'approbation</li> <li>Cr\u00e9er une branche <code>feature/nom-fonctionnalite</code></li> <li>Impl\u00e9menter la fonctionnalit\u00e9</li> <li>Ajouter des tests complets</li> <li>Mettre \u00e0 jour la documentation</li> <li>Cr\u00e9er une PR</li> </ol>"},{"location":"contributing/#documentation_1","title":"\ud83d\udcda Documentation","text":"<ol> <li>Identifier les sections \u00e0 am\u00e9liorer</li> <li>Cr\u00e9er une branche <code>docs/description</code></li> <li>Am\u00e9liorer la documentation</li> <li>V\u00e9rifier la coh\u00e9rence</li> <li>Cr\u00e9er une PR</li> </ol>"},{"location":"contributing/#tests_1","title":"\ud83e\uddea Tests","text":"<ol> <li>Identifier les parties non test\u00e9es</li> <li>Cr\u00e9er une branche <code>test/description</code></li> <li>Ajouter les tests manquants</li> <li>V\u00e9rifier la couverture</li> <li>Cr\u00e9er une PR</li> </ol>"},{"location":"contributing/#processus-de-review","title":"Processus de review","text":""},{"location":"contributing/#pour-les-contributeurs","title":"Pour les contributeurs","text":"<ol> <li>Attendre la review</li> <li>R\u00e9pondre aux commentaires</li> <li>Appliquer les suggestions</li> <li>Tester les modifications</li> <li>Mettre \u00e0 jour la PR si n\u00e9cessaire</li> </ol>"},{"location":"contributing/#pour-les-reviewers","title":"Pour les reviewers","text":"<ol> <li>V\u00e9rifier le code</li> <li>Tester les modifications</li> <li>Commenter de mani\u00e8re constructive</li> <li>Approuver si tout est correct</li> <li>Merger la PR</li> </ol>"},{"location":"contributing/#guidelines","title":"Guidelines","text":""},{"location":"contributing/#code","title":"Code","text":"<ul> <li>Simplicit\u00e9 : Code simple et lisible</li> <li>Performance : Optimiser quand n\u00e9cessaire</li> <li>S\u00e9curit\u00e9 : Respecter les bonnes pratiques</li> <li>Maintenabilit\u00e9 : Code facile \u00e0 maintenir</li> </ul>"},{"location":"contributing/#communication","title":"Communication","text":"<ul> <li>Respect : \u00catre respectueux envers tous</li> <li>Constructif : Commentaires constructifs</li> <li>Clair : Communication claire et pr\u00e9cise</li> <li>Patient : \u00catre patient avec les autres</li> </ul>"},{"location":"contributing/#tests_2","title":"Tests","text":"<ul> <li>Complets : Tests pour tous les cas</li> <li>Rapides : Tests qui s'ex\u00e9cutent rapidement</li> <li>Fiables : Tests qui ne flakent pas</li> <li>Maintenables : Tests faciles \u00e0 maintenir</li> </ul>"},{"location":"contributing/#support","title":"Support","text":""},{"location":"contributing/#questions","title":"Questions","text":"<ul> <li>GitHub Issues : Pour les bugs et questions</li> <li>GitHub Discussions : Pour les discussions g\u00e9n\u00e9rales</li> <li>Email : Pour les questions priv\u00e9es</li> </ul>"},{"location":"contributing/#ressources","title":"Ressources","text":"<ul> <li>Documentation : Documentation compl\u00e8te</li> <li>Code de conduite : CODE_OF_CONDUCT.md</li> <li>Changelog : CHANGELOG.md</li> </ul>"},{"location":"contributing/#merci","title":"Merci !","text":"<p>Merci de contribuer \u00e0 ce projet ! Chaque contribution, m\u00eame petite, est appr\u00e9ci\u00e9e.</p>"},{"location":"deployment/","title":"D\u00e9ploiement","text":""},{"location":"deployment/#environnements","title":"Environnements","text":""},{"location":"deployment/#developpement","title":"D\u00e9veloppement","text":"<ul> <li>Local : Machine de d\u00e9veloppement</li> <li>Configuration : Debug activ\u00e9, logs d\u00e9taill\u00e9s</li> <li>Base de donn\u00e9es : In-memory</li> </ul>"},{"location":"deployment/#staging","title":"Staging","text":"<ul> <li>Serveur : Environnement de test</li> <li>Configuration : Similaire \u00e0 la production</li> <li>Base de donn\u00e9es : Base de donn\u00e9es de test</li> </ul>"},{"location":"deployment/#production","title":"Production","text":"<ul> <li>Serveur : Environnement de production</li> <li>Configuration : Optimis\u00e9e pour la performance</li> <li>Base de donn\u00e9es : Base de donn\u00e9es de production</li> </ul>"},{"location":"deployment/#deploiement-local","title":"D\u00e9ploiement local","text":""},{"location":"deployment/#avec-docker-compose","title":"Avec Docker Compose","text":"<pre><code># D\u00e9veloppement\ndocker-compose up\n\n# En arri\u00e8re-plan\ndocker-compose up -d\n\n# Services sp\u00e9cifiques\ndocker-compose up api web\n</code></pre>"},{"location":"deployment/#avec-hatch","title":"Avec Hatch","text":"<pre><code># API\nhatch run start-api\n\n# Interface web\nhatch run start-web\n</code></pre>"},{"location":"deployment/#avec-uv","title":"Avec uv","text":"<pre><code># API\nuv run uvicorn todo_app.api:app --host 0.0.0.0 --port 8000\n\n# Interface web\nuv run streamlit run todo_app/webapp.py --server.port 8501\n</code></pre>"},{"location":"deployment/#deploiement-cloud","title":"D\u00e9ploiement cloud","text":""},{"location":"deployment/#aws","title":"AWS","text":""},{"location":"deployment/#ecs-elastic-container-service","title":"ECS (Elastic Container Service)","text":"<pre><code># task-definition.json\n{\n  \"family\": \"todo-api\",\n  \"networkMode\": \"awsvpc\",\n  \"requiresCompatibilities\": [\"FARGATE\"],\n  \"cpu\": \"256\",\n  \"memory\": \"512\",\n  \"executionRoleArn\": \"arn:aws:iam::account:role/ecsTaskExecutionRole\",\n  \"containerDefinitions\": [\n    {\n      \"name\": \"todo-api\",\n      \"image\": \"your-account.dkr.ecr.region.amazonaws.com/todo-api:latest\",\n      \"portMappings\": [\n        {\n          \"containerPort\": 8000,\n          \"protocol\": \"tcp\"\n        }\n      ],\n      \"environment\": [\n        {\n          \"name\": \"APP_NAME\",\n          \"value\": \"Todo List API\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"deployment/#lambda","title":"Lambda","text":"<pre><code># lambda_handler.py\nfrom mangum import Mangum\nfrom todo_app.api import app\n\nhandler = Mangum(app)\n</code></pre>"},{"location":"deployment/#google-cloud","title":"Google Cloud","text":""},{"location":"deployment/#cloud-run","title":"Cloud Run","text":"<pre><code># cloudbuild.yaml\nsteps:\n  - name: 'gcr.io/cloud-builders/docker'\n    args: ['build', '-t', 'gcr.io/$PROJECT_ID/todo-api', '.']\n  - name: 'gcr.io/cloud-builders/docker'\n    args: ['push', 'gcr.io/$PROJECT_ID/todo-api']\n  - name: 'gcr.io/cloud-builders/gcloud'\n    args: ['run', 'deploy', 'todo-api', '--image', 'gcr.io/$PROJECT_ID/todo-api', '--platform', 'managed', '--region', 'us-central1']\n</code></pre>"},{"location":"deployment/#azure","title":"Azure","text":""},{"location":"deployment/#container-instances","title":"Container Instances","text":"<pre><code># azure-pipelines.yml\ntrigger:\n- main\n\npool:\n  vmImage: 'ubuntu-latest'\n\nsteps:\n- task: Docker@2\n  inputs:\n    command: 'buildAndPush'\n    repository: 'todo-api'\n    dockerfile: 'Dockerfile'\n    containerRegistry: 'your-registry'\n\n- task: AzureContainerInstances@0\n  inputs:\n    azureSubscription: 'your-subscription'\n    resourceGroupName: 'your-resource-group'\n    location: 'East US'\n    image: 'your-registry.azurecr.io/todo-api:$(Build.BuildId)'\n    containerName: 'todo-api'\n    ports: '8000'\n</code></pre>"},{"location":"deployment/#configuration-de-production","title":"Configuration de production","text":""},{"location":"deployment/#variables-denvironnement","title":"Variables d'environnement","text":"<pre><code># Production\nAPP_NAME=Todo List API\nDEBUG=false\nHOST=0.0.0.0\nPORT=8000\nLOG_LEVEL=INFO\n\n# Base de donn\u00e9es\nDATABASE_URL=postgresql://user:password@localhost:5432/todo_db\n\n# S\u00e9curit\u00e9\nSECRET_KEY=your-secret-key\n</code></pre>"},{"location":"deployment/#docker","title":"Docker","text":""},{"location":"deployment/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\n\nWORKDIR /app\n\nCOPY pyproject.toml .\nRUN pip install -e .\n\nCOPY todo_app/ todo_app/\n\nEXPOSE 8000\n\nCMD [\"uvicorn\", \"todo_app.api:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n</code></pre>"},{"location":"deployment/#docker-composeyml","title":"docker-compose.yml","text":"<pre><code>version: '3.8'\n\nservices:\n  api:\n    build: .\n    ports:\n      - \"8000:8000\"\n    environment:\n      - APP_NAME=Todo List API\n      - DEBUG=false\n      - LOG_LEVEL=INFO\n    restart: unless-stopped\n\n  web:\n    build: .\n    command: streamlit run todo_app/webapp.py --server.port 8501 --server.headless true\n    ports:\n      - \"8501:8501\"\n    environment:\n      - APP_NAME=Todo List API\n    restart: unless-stopped\n</code></pre>"},{"location":"deployment/#monitoring","title":"Monitoring","text":""},{"location":"deployment/#health-checks","title":"Health checks","text":"<pre><code># V\u00e9rifier l'\u00e9tat de l'API\ncurl http://localhost:8000/health\n\n# V\u00e9rifier la disponibilit\u00e9\ncurl http://localhost:8000/health/ready\n</code></pre>"},{"location":"deployment/#logs","title":"Logs","text":"<pre><code># Docker Compose\ndocker-compose logs -f api\n\n# Docker\ndocker logs -f todo-api\n\n# Kubernetes\nkubectl logs -f deployment/todo-api\n</code></pre>"},{"location":"deployment/#metriques","title":"M\u00e9triques","text":"<ul> <li>Uptime : Disponibilit\u00e9 du service</li> <li>Response time : Temps de r\u00e9ponse des endpoints</li> <li>Error rate : Taux d'erreur</li> <li>Throughput : Nombre de requ\u00eates par seconde</li> </ul>"},{"location":"deployment/#securite","title":"S\u00e9curit\u00e9","text":""},{"location":"deployment/#https","title":"HTTPS","text":"<pre><code># nginx.conf\nserver {\n    listen 443 ssl;\n    server_name your-domain.com;\n\n    ssl_certificate /path/to/cert.pem;\n    ssl_certificate_key /path/to/key.pem;\n\n    location / {\n        proxy_pass http://localhost:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n</code></pre>"},{"location":"deployment/#authentification","title":"Authentification","text":"<pre><code># middleware.py\nfrom fastapi import HTTPException, Depends\nfrom fastapi.security import HTTPBearer\n\nsecurity = HTTPBearer()\n\nasync def verify_token(token: str = Depends(security)):\n    if not verify_jwt_token(token.credentials):\n        raise HTTPException(status_code=401, detail=\"Invalid token\")\n    return token\n</code></pre>"},{"location":"deployment/#scaling","title":"Scaling","text":""},{"location":"deployment/#horizontal-scaling","title":"Horizontal scaling","text":"<pre><code># kubernetes-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: todo-api\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: todo-api\n  template:\n    metadata:\n      labels:\n        app: todo-api\n    spec:\n      containers:\n      - name: todo-api\n        image: todo-api:latest\n        ports:\n        - containerPort: 8000\n        resources:\n          requests:\n            memory: \"256Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n</code></pre>"},{"location":"deployment/#load-balancing","title":"Load balancing","text":"<pre><code># kubernetes-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: todo-api-service\nspec:\n  selector:\n    app: todo-api\n  ports:\n  - port: 80\n    targetPort: 8000\n  type: LoadBalancer\n</code></pre>"},{"location":"deployment/#rollback","title":"Rollback","text":""},{"location":"deployment/#docker_1","title":"Docker","text":"<pre><code># Rollback vers une version pr\u00e9c\u00e9dente\ndocker run -p 8000:8000 todo-api:previous-version\n</code></pre>"},{"location":"deployment/#kubernetes","title":"Kubernetes","text":"<pre><code># Rollback du d\u00e9ploiement\nkubectl rollout undo deployment/todo-api\n\n# Voir l'historique\nkubectl rollout history deployment/todo-api\n</code></pre>"},{"location":"deployment/#maintenance","title":"Maintenance","text":""},{"location":"deployment/#mise-a-jour","title":"Mise \u00e0 jour","text":"<pre><code># Mise \u00e0 jour des d\u00e9pendances\nhatch run pip install -U -e \".[dev]\"\n\n# Rebuild de l'image Docker\ndocker build -t todo-api:latest .\n\n# Red\u00e9marrage du service\ndocker-compose restart api\n</code></pre>"},{"location":"deployment/#sauvegarde","title":"Sauvegarde","text":"<pre><code># Sauvegarde de la base de donn\u00e9es\npg_dump todo_db &gt; backup.sql\n\n# Restauration\npsql todo_db &lt; backup.sql\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Python 3.11 ou sup\u00e9rieur</li> <li>Git</li> <li>pip ou uv (gestionnaire de paquets)</li> </ul>"},{"location":"installation/#installation-avec-hatch-recommande","title":"Installation avec Hatch (recommand\u00e9)","text":"<p>Hatch est le gestionnaire de projet moderne utilis\u00e9 par ce projet.</p> <pre><code># Cloner le repository\ngit clone https://github.com/your-username/todo-list-best-practices.git\ncd todo-list-best-practices\n\n# Cr\u00e9er l'environnement virtuel\nhatch env create\n\n# Installer les d\u00e9pendances de d\u00e9veloppement\nhatch run pip install -e \".[dev]\"\n</code></pre>"},{"location":"installation/#installation-avec-pip","title":"Installation avec pip","text":"<pre><code># Cloner le repository\ngit clone https://github.com/your-username/todo-list-best-practices.git\ncd todo-list-best-practices\n\n# Cr\u00e9er un environnement virtuel\npython -m venv .venv\n\n# Activer l'environnement virtuel\n# Sur Linux/macOS :\nsource .venv/bin/activate\n# Sur Windows :\n.venv\\Scripts\\activate\n\n# Installer les d\u00e9pendances\npip install -e \".[dev]\"\n</code></pre>"},{"location":"installation/#installation-avec-uv","title":"Installation avec uv","text":"<pre><code># Cloner le repository\ngit clone https://github.com/your-username/todo-list-best-practices.git\ncd todo-list-best-practices\n\n# Installer les d\u00e9pendances\nuv sync --dev\n</code></pre>"},{"location":"installation/#verification-de-linstallation","title":"V\u00e9rification de l'installation","text":"<pre><code># V\u00e9rifier que l'API fonctionne\nhatch run start-api\n# ou\nuv run uvicorn todo_app.api:app --host 0.0.0.0 --port 8000\n\n# Dans un autre terminal, tester l'API\ncurl http://localhost:8000/health\n</code></pre>"},{"location":"installation/#configuration","title":"Configuration","text":""},{"location":"installation/#variables-denvironnement","title":"Variables d'environnement","text":"<p>Cr\u00e9ez un fichier <code>.env</code> dans la racine du projet :</p> <pre><code>APP_NAME=Todo List API\nDEBUG=false\nHOST=0.0.0.0\nPORT=8000\nLOG_LEVEL=INFO\n</code></pre>"},{"location":"installation/#configuration-avancee","title":"Configuration avanc\u00e9e","text":"<pre><code># Variables d'environnement personnalis\u00e9es\nexport APP_NAME=\"Mon API Todo\"\nexport DEBUG=true\nexport LOG_LEVEL=DEBUG\n</code></pre>"},{"location":"installation/#depannage","title":"D\u00e9pannage","text":""},{"location":"installation/#problemes-courants","title":"Probl\u00e8mes courants","text":"<ol> <li>Erreur de version Python : Assurez-vous d'utiliser Python 3.11+</li> <li>Erreur de permissions : Utilisez un environnement virtuel</li> <li>Erreur de d\u00e9pendances : V\u00e9rifiez que toutes les d\u00e9pendances sont install\u00e9es</li> </ol>"},{"location":"installation/#support","title":"Support","text":"<p>Si vous rencontrez des probl\u00e8mes, consultez : - Issues GitHub - Documentation compl\u00e8te</p>"},{"location":"tests/","title":"Tests","text":""},{"location":"tests/#vue-densemble","title":"Vue d'ensemble","text":"<p>Le projet utilise pytest comme framework de tests principal, avec une couverture de code cible de 85%.</p>"},{"location":"tests/#structure-des-tests","title":"Structure des tests","text":"<pre><code>tests/\n\u251c\u2500\u2500 test_api.py          # Tests d'int\u00e9gration API\n\u251c\u2500\u2500 test_service.py      # Tests unitaires service\n\u251c\u2500\u2500 test_repository.py   # Tests unitaires repository\n\u2514\u2500\u2500 test_models.py       # Tests unitaires mod\u00e8les\n</code></pre>"},{"location":"tests/#types-de-tests","title":"Types de tests","text":""},{"location":"tests/#tests-unitaires","title":"Tests unitaires","text":"<p>Testent des unit\u00e9s individuelles de code en isolation.</p> <p>Exemple : <pre><code>def test_create_todo():\n    \"\"\"Test creating a todo.\"\"\"\n    payload = TodoCreate(title=\"Test Todo\", description=\"Test description\")\n    todo = self.service.create_todo(payload)\n\n    assert todo.title == \"Test Todo\"\n    assert todo.description == \"Test description\"\n    assert todo.completed is False\n    assert todo.id == 1\n</code></pre></p>"},{"location":"tests/#tests-dintegration","title":"Tests d'int\u00e9gration","text":"<p>Testent l'interaction entre plusieurs composants.</p> <p>Exemple : <pre><code>def test_create_todo_success():\n    \"\"\"Test creating a todo successfully.\"\"\"\n    payload = {\"title\": \"Test Todo\", \"description\": \"Test description\"}\n    response = self.client.post(\"/todos\", json=payload)\n\n    assert response.status_code == 201\n    data = response.json()\n    assert data[\"title\"] == \"Test Todo\"\n    assert data[\"description\"] == \"Test description\"\n    assert data[\"completed\"] is False\n</code></pre></p>"},{"location":"tests/#commandes-de-test","title":"Commandes de test","text":""},{"location":"tests/#executer-tous-les-tests","title":"Ex\u00e9cuter tous les tests","text":"<pre><code># Avec Hatch\nhatch run pytest\n\n# Avec uv\nuv run pytest\n\n# Avec pytest directement\npytest\n</code></pre>"},{"location":"tests/#tests-avec-couverture","title":"Tests avec couverture","text":"<pre><code># Couverture compl\u00e8te\nhatch run pytest --cov=todo_app --cov-report=html --cov-fail-under=85\n\n# Couverture en mode terminal\nhatch run pytest --cov=todo_app --cov-report=term-missing\n</code></pre>"},{"location":"tests/#tests-specifiques","title":"Tests sp\u00e9cifiques","text":"<pre><code># Tests d'un module\nhatch run pytest tests/test_api.py -v\n\n# Tests d'une classe\nhatch run pytest tests/test_service.py::TestTodoService -v\n\n# Tests d'une m\u00e9thode\nhatch run pytest tests/test_api.py::TestTodoAPI::test_create_todo_success -v\n</code></pre>"},{"location":"tests/#tests-en-mode-watch","title":"Tests en mode watch","text":"<pre><code># Surveiller les changements\nhatch run ptw\n\n# Avec couverture\nhatch run ptw -- --cov=todo_app\n</code></pre>"},{"location":"tests/#configuration-des-tests","title":"Configuration des tests","text":""},{"location":"tests/#pytestini","title":"pytest.ini","text":"<pre><code>[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\npython_files = [\"test_*.py\", \"*_test.py\"]\npython_classes = [\"Test*\"]\npython_functions = [\"test_*\"]\naddopts = [\n    \"--strict-markers\",\n    \"--strict-config\",\n    \"--cov=todo_app\",\n    \"--cov-report=term-missing\",\n    \"--cov-report=html\",\n    \"--cov-report=xml\",\n    \"--cov-fail-under=85\",\n    \"--cov-branch\",\n    \"-v\"\n]\n</code></pre>"},{"location":"tests/#marqueurs-de-test","title":"Marqueurs de test","text":"<pre><code>@pytest.mark.unit\ndef test_unit_example():\n    \"\"\"Test unitaire.\"\"\"\n    pass\n\n@pytest.mark.integration\ndef test_integration_example():\n    \"\"\"Test d'int\u00e9gration.\"\"\"\n    pass\n\n@pytest.mark.slow\ndef test_slow_example():\n    \"\"\"Test lent.\"\"\"\n    pass\n</code></pre>"},{"location":"tests/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"tests/#1-nommage-des-tests","title":"1. Nommage des tests","text":"<ul> <li>Fonctions : <code>test_&lt;fonctionnalit\u00e9&gt;_&lt;scenario&gt;</code></li> <li>Classes : <code>Test&lt;Classe&gt;</code></li> <li>Fichiers : <code>test_&lt;module&gt;.py</code></li> </ul>"},{"location":"tests/#2-structure-des-tests","title":"2. Structure des tests","text":"<pre><code>def test_example():\n    \"\"\"Test description.\"\"\"\n    # Arrange\n    payload = TodoCreate(title=\"Test\")\n\n    # Act\n    result = service.create_todo(payload)\n\n    # Assert\n    assert result.title == \"Test\"\n</code></pre>"},{"location":"tests/#3-isolation-des-tests","title":"3. Isolation des tests","text":"<p>Chaque test doit \u00eatre ind\u00e9pendant et ne pas affecter les autres.</p>"},{"location":"tests/#4-mocks-et-stubs","title":"4. Mocks et stubs","text":"<p>Utilisez des mocks pour isoler les d\u00e9pendances externes.</p> <pre><code>@patch(\"todo_app.service.logger\")\ndef test_with_mock(mock_logger):\n    \"\"\"Test with mocked logger.\"\"\"\n    service.create_todo(payload)\n    mock_logger.info.assert_called_once()\n</code></pre>"},{"location":"tests/#couverture-de-code","title":"Couverture de code","text":""},{"location":"tests/#objectif","title":"Objectif","text":"<ul> <li>Minimum : 85%</li> <li>Cible : 95%</li> </ul>"},{"location":"tests/#exclusions","title":"Exclusions","text":"<p>Les modules suivants sont exclus de la couverture : - <code>config.py</code> (configuration) - <code>logger.py</code> (infrastructure) - <code>webapp.py</code> (interface utilisateur)</p>"},{"location":"tests/#rapport-de-couverture","title":"Rapport de couverture","text":"<pre><code># G\u00e9n\u00e9rer le rapport HTML\nhatch run pytest --cov=todo_app --cov-report=html\n\n# Ouvrir le rapport\nopen htmlcov/index.html\n</code></pre>"},{"location":"tests/#tests-en-cicd","title":"Tests en CI/CD","text":""},{"location":"tests/#github-actions","title":"GitHub Actions","text":"<p>Les tests sont ex\u00e9cut\u00e9s automatiquement sur : - Push sur main - Pull requests - Tags de release</p>"},{"location":"tests/#pipeline-de-test","title":"Pipeline de test","text":"<ol> <li>Installation des d\u00e9pendances</li> <li>Linting avec Ruff</li> <li>Tests unitaires avec pytest</li> <li>Couverture de code</li> <li>Tests d'int\u00e9gration</li> <li>Build Docker</li> </ol>"},{"location":"tests/#depannage","title":"D\u00e9pannage","text":""},{"location":"tests/#problemes-courants","title":"Probl\u00e8mes courants","text":"<ol> <li>Tests qui \u00e9chouent : V\u00e9rifiez l'isolation des tests</li> <li>Couverture faible : Ajoutez des tests pour les cas manqu\u00e9s</li> <li>Tests lents : Utilisez des mocks pour les d\u00e9pendances externes</li> </ol>"},{"location":"tests/#debug-des-tests","title":"Debug des tests","text":"<pre><code># Mode debug\nhatch run pytest --pdb\n\n# Tests avec output d\u00e9taill\u00e9\nhatch run pytest -s -v\n\n# Tests d'une seule m\u00e9thode\nhatch run pytest tests/test_api.py::TestTodoAPI::test_create_todo_success -v -s\n</code></pre>"},{"location":"usage/","title":"Utilisation","text":""},{"location":"usage/#demarrage-de-lapplication","title":"D\u00e9marrage de l'application","text":""},{"location":"usage/#api-fastapi","title":"API FastAPI","text":"<pre><code># Avec Hatch\nhatch run start-api\n\n# Avec uvicorn directement\nuvicorn todo_app.api:app --host 0.0.0.0 --port 8000 --reload\n\n# Avec uv\nuv run uvicorn todo_app.api:app --host 0.0.0.0 --port 8000 --reload\n</code></pre> <p>L'API sera disponible sur http://localhost:8000</p>"},{"location":"usage/#interface-web-streamlit","title":"Interface web Streamlit","text":"<pre><code># Avec Hatch\nhatch run start-web\n\n# Avec streamlit directement\nstreamlit run todo_app/webapp.py --server.port 8501\n\n# Avec uv\nuv run streamlit run todo_app/webapp.py --server.port 8501\n</code></pre> <p>L'interface web sera disponible sur http://localhost:8501</p>"},{"location":"usage/#utilisation-de-lapi","title":"Utilisation de l'API","text":""},{"location":"usage/#endpoints-disponibles","title":"Endpoints disponibles","text":"M\u00e9thode Endpoint Description GET <code>/todos</code> Lister toutes les t\u00e2ches POST <code>/todos</code> Cr\u00e9er une nouvelle t\u00e2che PATCH <code>/todos/{id}</code> Mettre \u00e0 jour une t\u00e2che DELETE <code>/todos/{id}</code> Supprimer une t\u00e2che GET <code>/health</code> Health check GET <code>/health/ready</code> Readiness check"},{"location":"usage/#exemples-dutilisation","title":"Exemples d'utilisation","text":""},{"location":"usage/#lister-les-taches","title":"Lister les t\u00e2ches","text":"<pre><code>curl http://localhost:8000/todos\n</code></pre>"},{"location":"usage/#creer-une-tache","title":"Cr\u00e9er une t\u00e2che","text":"<pre><code>curl -X POST http://localhost:8000/todos \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"title\": \"Ma premi\u00e8re t\u00e2che\",\n    \"description\": \"Description de la t\u00e2che\"\n  }'\n</code></pre>"},{"location":"usage/#mettre-a-jour-une-tache","title":"Mettre \u00e0 jour une t\u00e2che","text":"<pre><code>curl -X PATCH http://localhost:8000/todos/1 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"completed\": true\n  }'\n</code></pre>"},{"location":"usage/#supprimer-une-tache","title":"Supprimer une t\u00e2che","text":"<pre><code>curl -X DELETE http://localhost:8000/todos/1\n</code></pre>"},{"location":"usage/#utilisation-de-linterface-web","title":"Utilisation de l'interface web","text":"<ol> <li>Ouvrez http://localhost:8501 dans votre navigateur</li> <li>Utilisez le formulaire pour cr\u00e9er de nouvelles t\u00e2ches</li> <li>Cochez les cases pour marquer les t\u00e2ches comme termin\u00e9es</li> <li>Utilisez les filtres pour organiser vos t\u00e2ches</li> </ol>"},{"location":"usage/#modeles-de-donnees","title":"Mod\u00e8les de donn\u00e9es","text":""},{"location":"usage/#todocreate","title":"TodoCreate","text":"<pre><code>{\n    \"title\": \"string\",           # Obligatoire, 1-200 caract\u00e8res\n    \"description\": \"string\"       # Optionnel, max 2000 caract\u00e8res\n}\n</code></pre>"},{"location":"usage/#todoindb","title":"TodoInDB","text":"<pre><code>{\n    \"id\": 1,                     # ID unique\n    \"title\": \"string\",           # Titre de la t\u00e2che\n    \"description\": \"string\",     # Description (peut \u00eatre null)\n    \"completed\": false,          # Statut de compl\u00e9tion\n    \"created_at\": \"2023-01-01T12:00:00Z\"  # Date de cr\u00e9ation\n}\n</code></pre>"},{"location":"usage/#todoupdate","title":"TodoUpdate","text":"<pre><code>{\n    \"title\": \"string\",           # Optionnel, 1-200 caract\u00e8res\n    \"description\": \"string\",     # Optionnel, max 2000 caract\u00e8res\n    \"completed\": true            # Optionnel, bool\u00e9en\n}\n</code></pre>"},{"location":"usage/#gestion-des-erreurs","title":"Gestion des erreurs","text":"<p>L'API retourne des codes de statut HTTP appropri\u00e9s :</p> <ul> <li><code>200</code> : Succ\u00e8s</li> <li><code>201</code> : Cr\u00e9\u00e9 avec succ\u00e8s</li> <li><code>204</code> : Supprim\u00e9 avec succ\u00e8s</li> <li><code>404</code> : Ressource non trouv\u00e9e</li> <li><code>422</code> : Erreur de validation</li> </ul>"},{"location":"usage/#exemple-derreur","title":"Exemple d'erreur","text":"<pre><code>{\n    \"detail\": [\n        {\n            \"type\": \"string_too_short\",\n            \"loc\": [\"body\", \"title\"],\n            \"msg\": \"String should have at least 1 character\",\n            \"input\": \"\"\n        }\n    ]\n}\n</code></pre>"}]}